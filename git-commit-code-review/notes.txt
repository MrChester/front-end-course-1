гит разработан для linux core разработчиков 
которые не боятся сложности :)

I actually have absolutely zero interest in creating a traditional Source Control Managments System  - Linus Torvalds

гит как файловая система

Simple---Directed Acyclic Graph
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Git init or clone
создает гит директорию - .git (complete empty git repo)

----------------------
git add и git commit

git add - добавили в репозиторий
git commit - создаёт коммит объект

commit - добовляет коммит объект и вешает лейблы - head и master

Все игроки - Commit objects and references

-------
Создали пустой бранч, он указыает на последний коммит в хост бранче
--------
Commit ID = content + author + data + log + previous commit id // every commit is unique // commits never change //
--------

гит и checksum - друзья на век
-----------
staging area or index or cache - prepare thing to be written (можно подготовить несколько комитов и потом)
----------
merge - фича готова, 
git merge feature // - fast forward - просто передвинуть метки мастера вверх (по сути нету мержа)
------------
git reset --hard HEAD^

-----------
git merge создаёт новый коммит

------------
git не ывбрасывает коммиты

-----------------

все работает оффлайн, кроме push & pop, fetch

----------
чистая история - nice to have

--------
fun - octopus merge
----------
remote -- working directory communication
-----

tracking branches - origin/master origin/head
-------------
git gabrage
--------------

basic pull = fetch and merge
---------
every id is unique
every commit is unique
commits never change (and never changed its previous commit) (значит и внизу по дерево ничего поменятся не может)
Every commit can be uniquely identified by its id

git doesnt throw anithing away
detached commit live about 2 weeks

------
lightweight (just pointer) and annotated tags (full git object)
----------
git commit --amend
----------
git rebase -i HEAD~3
---------
git reflog
---------
work with rebase ### create new history - it is not possible to simply change
##############################
Git rebase
#############################
-------------------
Git For Ages 4 And Up
https://www.youtube.com/watch?v=1ffBJ4sVUb4